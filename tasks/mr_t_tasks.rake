namespace :i18n do

  desc "Combines all translations to single files per locale."
  task :combine => :environment do
    include MrT::Common
    old_files = I18n.load_path.flatten
    all_translations.each do |locale, t|
      filename = "#{RAILS_ROOT}/config/locales/#{locale}.yml"
      write_yaml(filename, { locale.to_s => t }, "All translations of this locale combined.")
      old_files.delete(filename)
    end
    old_files.select do |f|
      f.include?("#{RAILS_ROOT}/config/locales")
    end.each do |f|
      FileUtils.mv f, "#{f}.bak", :verbose => true
    end
  end

  desc "Compares all locales and writes missing keys to their corresponding locale files."
  task :compare => :environment do
    include MrT::Common
    keys = deep_nillify(all_translations)
    all_keys = {}
    keys.each do |locale, t|
      all_keys.deep_merge!(t || {}) 
    end
    available_locales = keys.keys
    available_locales.each do |locale|
      t = deep_remove_not_nil(locale => all_keys.deep_merge(all_translations[locale]))
      filename = "#{RAILS_ROOT}/config/locales/missing_#{locale}.yml"
      t.deep_merge!(YAML::load(IO.read(filename))) if File.exist?(filename) # make sure that old missing values don't get lost
      write_yaml(filename, t, "Generated by comparing all locales")
    end
  end

end
